{"version":3,"sources":["use-screen-orientation-lock.ts"],"names":["useScreenOrientationLock","lock","lockInfo","setLockInfo","lockError","setLockError","ScreenOrientation","getOrientationLockAsync","then","lockAsync","catch","unlockAsync"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA;;;;;;;;AAQO,SAASA,wBAAT,CACNC,IADM,EAKL;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B,sBAAhC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B,sBAAlC;AAEA,wBAAU,MAAM;AACfC,IAAAA,iBAAiB,CAACC,uBAAlB,GAA4CC,IAA5C,CAAiDL,WAAjD;;AAEA,QAAIF,IAAJ,EAAU;AACTK,MAAAA,iBAAiB,CACfG,SADF,CACYR,IADZ,EAEEO,IAFF,CAEO,MAAML,WAAW,CAACF,IAAD,CAFxB,EAGES,KAHF,CAGQL,YAHR;AAKA,aAAO,MAAM;AACZC,QAAAA,iBAAiB,CAACK,WAAlB;AACA,OAFD;AAGA;AACD,GAbD,EAaG,CAACV,IAAD,CAbH;AAeA,SAAO,CAACC,QAAD,EAAWE,SAAX,CAAP;AACA","sourcesContent":["import { useEffect, useState } from 'react';\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\n/**\n * Get or lock the screen orientation of the device.\n * This hook will always fetch the current device lock.\n * It will also apply the device lock when this is provided.\n *\n * @see https://docs.expo.io/versions/latest/sdk/screen-orientation/\n * @example const [lockInfo, lockError] = useScreenOrientationLock(...);\n */\nexport function useScreenOrientationLock(\n\tlock?: ScreenOrientation.OrientationLock,\n): [\n\tScreenOrientation.OrientationLock | undefined,\n\tError | undefined,\n] {\n\tconst [lockInfo, setLockInfo] = useState<ScreenOrientation.OrientationLock>();\n\tconst [lockError, setLockError] = useState<Error>();\n\n\tuseEffect(() => {\n\t\tScreenOrientation.getOrientationLockAsync().then(setLockInfo);\n\n\t\tif (lock) {\n\t\t\tScreenOrientation\n\t\t\t\t.lockAsync(lock)\n\t\t\t\t.then(() => setLockInfo(lock))\n\t\t\t\t.catch(setLockError);\n\n\t\t\treturn () => {\n\t\t\t\tScreenOrientation.unlockAsync();\n\t\t\t};\n\t\t}\n\t}, [lock]);\n\n\treturn [lockInfo, lockError];\n}\n\n"]}